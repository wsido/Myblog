---
description: 
globs: 
alwaysApply: true
---
# MCP Sequential-Thinking 使用规则

## 何时使用
当你面对需要拆解、规划、多步推理或深度分析的复杂任务时，应优先使用本工具。它适用于：
-   需要制定详细计划的编码或重构任务。
-   分析和解决多阶段的 Bug。
-   设计新的功能或系统架构。
-   对不确定的问题进行探索性分析。

## 如何使用
1.  **初步评估**: 启动时，预估解决问题所需的总步骤数 (`total_thoughts`)。这只是一个初步估计，可以随时调整。
2.  **循序渐进**: 通过 `thought` 参数，记录每一步的思考过程。确保每个 `thought` 都是一个清晰、独立的分析单元。
3.  **保持灵活**:
    -   如果发现之前的思路有误，使用 `is_revision` 和 `revises_thought` 来修正它。
    -   如果发现问题比预想的复杂，可以增加思考步骤，即使超过了初始的 `total_thoughts`。
4.  **假设与验证**: 在分析过程中，大胆提出假设 (`Hypothesis generation`)，然后通过后续的思考步骤来验证它 (`Hypothesis verification`)。
5.  **完整闭环**: 只有在问题得到明确、完整的解答后，才将 `next_thought_needed` 设置为 `false`，以结束思考过程。不要过早地得出结论。

