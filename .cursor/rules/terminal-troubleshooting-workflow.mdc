---
description: 
globs: 
alwaysApply: true
---
Rule Name: 主动式终端任务处理与复盘规则
Description: 本规则为 AI 代理定义了一个处理终端任务的闭环工作流。它强调主动分析、解决问题，并强制在任务结束后进行复盘与日志记录，以形成知识沉淀。

# 核心原则
- **闭环思维**: 任何由用户发起的终端任务，都必须以“执行 -> 复盘 -> 记录”的完整闭环来结束。
- **任务导向**: 将用户的原始请求视为一个完整的“任务单元”，所有操作围绕此单元的目标进行。
- **主动复盘**: 在任务完成后，代理必须主动自我检查是否触发了日志记录的条件，而非等待用户提醒。

# 工作流状态机

1.  **任务启动 (TASK_STARTED)**
    *   **触发器**: 用户提出需要执行终端命令的请求。
    *   **行为**:
        *   确认并理解任务的最终目标（例如，"安装A、B、C三个包"）。
        *   进入 `命令执行` 状态。

2.  **命令执行 (COMMAND_EXECUTION)**
    *   **触发器**: 进入此状态或从 `分析与修复` 状态返回。
    *   **行为**:
        *   执行任务单元中的下一个具体命令。
        *   **如果成功**: 如果任务单元中还有其他命令，则继续循环此状态；如果所有命令都已成功，则进入 `任务结束` 状态。
        *   **如果失败**: 自动捕获完整的错误输出，并进入 `分析与修复` 状态。

3.  **分析与修复 (ANALYSIS_AND_FIX)**
    *   **触发器**: `命令执行` 状态中发生错误。
    *   **行为**:
        *   分析错误日志，定位根本原因。
        *   提出并向用户解释解决方案（例如：修正命令、清理缓存、更换安装方法）。
        *   **如果方案可自动执行**: 带着修复后的新命令，返回 `命令执行` 状态。
        *   **如果方案需要用户介入** (例如：需要管理员权限，或包名不确定): 进入 `请求介入` 状态。

4.  **请求介入 (AWAITING_INTERVENTION)**
    *   **触发器**: `分析与修复` 状态识别出代理无法独立解决的问题。
    *   **行为**:
        *   向用户清晰地解释当前的障碍。
        *   提供明确的建议，等待用户提供信息或完成必要操作。
        *   问题解决后，根据情况返回 `命令执行` 状态或进入 `任务结束` 状态。

5.  **任务结束 (TASK_CONCLUDED)**
    *   **触发器**: 任务单元中的所有命令都已处理完毕（无论是成功、失败后修复、还是被阻塞）。
    *   **行为**:
        *   向用户简要总结任务的最终结果。
        *   **立即强制进入 `复盘与记录` 状态。这是不可跳过的一步。**

6.  **复盘与记录 (REVIEW_AND_LOG)**
    *   **触发器**: `任务结束` 状态的强制转换。
    *   **行为**:
        *   **自我检查**: 判断在本次任务中是否出现了任何命令执行失败的情况。
        *   **如果出现过失败**:
            1.  **信息聚合**: 从交互历史中，整理出所有相关的命令、错误日志、解决方案和最终结果。
            2.  **生成日志**: 按照下面定义的 **结构化日志模板** 格式化信息。
            3.  **写入文件**: 将生成的日志追加到 `terminal_troubleshooting_log.md` 文件中。
            4.  **告知用户**: 在完成所有操作后，向用户发送最终消息，例如：“任务已完成，并将包含解决方案的完整过程记录在了 `terminal_troubleshooting_log.md` 中。”
        *   **如果没有出现失败**: 流程正常结束。

# 结构化日志模板

## YYYY-MM-DD: [任务的简要标题，例如：安装多个开发工具]

**任务目标**: [用户最初的请求]

---

### 工具/命令 1: `[执行的命令或工具名]`

*   **状态**: [成功 / 失败已解决 / 失败未解决]
*   **命令历史**:
    ```bash
    # 第一次尝试的命令
    [command_1]
    # 第二次尝试的命令 (如果适用)
    [command_2]
    ```
*   **错误摘要** (如果失败):
    ```
    [关键的错误信息]
    ```
*   **解决方案与分析** (如果失败): [对问题的分析，以及最终解决问题的步骤或命令]

---

### 工具/命令 2: `[执行的命令或工具名]`

*   **状态**: [成功 / 失败已解决 / 失败未解决]
*   **命令历史**:
    ```bash
    [command]
    ```
*   **错误摘要** (如果失败): ...
*   **解决方案与分析** (如果失败): ...

---
