<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.wsido.mapper.MomentMapper">

    <resultMap id="moment" type="top.wsido.entity.Moment">
        <id property="id" column="id"/>
        <result property="content" column="content"/>
        <result property="createTime" column="create_time"/>
        <result property="likes" column="likes"/>
        <result property="published" column="is_published"/>
        <result property="userId" column="user_id"/>
    </resultMap>

    <!--查询动态List-->
    <select id="getMomentList" resultMap="moment">
        select id, content, create_time, likes, is_published, user_id from moment
    </select>

    <!--根据用户ID查询动态List-->
    <select id="getMomentListByUserId" resultMap="moment">
        select id, content, create_time, likes, is_published, user_id from moment where user_id = #{userId} order by create_time desc
    </select>

    <!--给动态点赞-->
    <update id="addLikeByMomentId">
        update moment set likes=likes+1 where id=#{momentId}
    </update>

    <!--更新动态发布状态-->
    <update id="updateMomentPublishedById">
        update moment set is_published=#{published} where id=#{momentId}
    </update>

    <!--根据id查询动态-->
    <select id="getMomentById" resultMap="moment">
        select id, content, create_time, likes, is_published, user_id from moment where id=#{id}
    </select>

    <!--按id删除动态-->
    <delete id="deleteMomentById">
        delete from moment where id=#{id}
    </delete>

    <!--添加动态-->
    <insert id="saveMoment" parameterType="top.wsido.entity.Moment" useGeneratedKeys="true" keyProperty="id">
        insert into moment (content, create_time, likes, is_published, user_id) values (#{content}, #{createTime}, #{likes}, #{published}, #{userId})
    </insert>

    <!--更新动态-->
    <update id="updateMoment" parameterType="top.wsido.entity.Moment">
        update moment set content=#{content}, create_time=#{createTime}, likes=#{likes}, is_published=#{published}, user_id=#{userId} where id=#{id}
    </update>
</mapper>